<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	<!-- tomcat any server -Dspring.profiles.active=local -->
	<context-param>
		<param-name>spring.profiles.active</param-name>
		<param-value>local</param-value>
	</context-param>

	<!-- The definition of the Root Spring Container shared by all Servlets 
		and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		/WEB-INF/spring/root-context.xml
		classpath*:configuration/tiles3-config.xml
		</param-value>
	</context-param>

	<!-- log4j -->
	<!-- <context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath*:configuration/log4j.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener> -->
	
	<!--  ***** ****************************************** ***** -->
    <!--  *****     Handling System.out and System.err     ***** -->
    <!--  ***** ****************************************** ***** -->
	<listener>
        <listener-class>uk.org.lidalia.sysoutslf4j.context.SysOutOverSLF4JServletContextListener</listener-class>
    </listener>
    
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>

	<filter>
		<filter-name>CommonWebFilter</filter-name>
		<filter-class>kr.co.insoft.core.filter.CommonWebFilter</filter-class>
		<async-supported>true</async-supported>
	</filter>
	<filter-mapping>
		<filter-name>CommonWebFilter</filter-name>
		<url-pattern>*.htm</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!--  ***** ******************************************  ***** -->
    <!--  ***** Providing URL for Logback Status (Optional) ***** -->
    <!--  ***** With OnStatusConsoleListener (above)        ***** -->
    <!--  ***** ******************************************  ***** -->
    <servlet>
        <servlet-name>LogbackStatus</servlet-name>
        <servlet-class>ch.qos.logback.classic.ViewStatusMessagesServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>LogbackStatus</servlet-name>
        <url-pattern>/logbackStatus</url-pattern>
    </servlet-mapping>

    <!--  ***** ****************************************************** ***** -->
    <!--  ***** Handling HttpRequest and HttpResponse w Logback-Access ***** -->
    <!--  ***** ****************************************************** ***** -->
    <filter>
        <filter-name>TeeFilter</filter-name>
        <filter-class>ch.qos.logback.access.servlet.TeeFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>TeeFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
	<!-- 해다 파일들은 Spring을 거치지 않고 출력됨 / 추가적인 확장자 등록 -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.ico</url-pattern>
	</servlet-mapping>

	<servlet-mapping><!-- thymlef / tiles -->
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>
	<servlet-mapping><!-- json -->
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.json</url-pattern>
	</servlet-mapping>
	<servlet-mapping><!-- xml -->
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.xml</url-pattern>
	</servlet-mapping>
	<servlet-mapping><!-- css -->
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping>
	<servlet-mapping><!-- javascript -->
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.js</url-pattern>
	</servlet-mapping>
	<servlet-mapping><!-- image -->
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.jpg</url-pattern>
	</servlet-mapping>
	<servlet-mapping><!-- image -->
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.png</url-pattern>
	</servlet-mapping>
	<servlet-mapping><!-- image -->
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.gif</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>/first.htm</welcome-file>
	</welcome-file-list>

</web-app>
